import app from './app.js'
import http from 'http'
import https from 'https'
import fs from "fs"
import path from 'path'
import Logger from './logger.js'
import { connectDb, dropDb, models } from "./models/db_connection.js"
import { cleanDirectory } from './utils/utils.js'
import User from "./models/user.js"

let logger = Logger.getLogger();

// Certificate options for ssl
var options = {
    key: fs.readFileSync(process.env.KEY_FILE),
    cert: fs.readFileSync(process.env.CERT_FILE),
    //ca: fs.readFileSync(process.env.CA_FILE)
  };

// Remove files generated by processing if the development environment requires it.
if (process.env.NODE_ENV == "development" && process.env.ERASE_TEST_REPO == 'true'){
    console.log("Clearing test repository folder.")
    cleanDirectory(path.resolve(process.env.LEARNING_OBJECT_REPOSITORY_LOCATION));
}
if (process.env.NODE_ENV == "development" && process.env.ERASE_TEST_STORAGE == 'true'){
    cleanDirectory(path.resolve(process.env.LEARNING_OBJECT_STORAGE_LOCATION));
    console.log("Clearing test storage folder.")
}

// Connect to database
connectDb().then(async (connection) => {
    if (process.env.NODE_ENV == "development" && process.env.ERASE_DATABASE_ON_SYNC == 'true'){ 
        console.log("Clearing database for testing environment");
        dropDb();
    }
    logger.info("Database connection established");
    startServer();
    createAdminUser();
});

let startServer = () => {
    http.createServer(app).listen(process.env.HTTP_PORT, () => {
        logger.info(`Running http server on port ${process.env.HTTP_PORT}`);
    });
    https.createServer(options, app).listen(process.env.HTTPS_PORT, () => {
        logger.info(`Running https server on port ${process.env.HTTPS_PORT}`);
    });
}

// Create admin user
let createAdminUser = () => {
    let adminUser = new User()
    adminUser.username = process.env.ADMIN_USER_USERNAME
    adminUser.setPassword(process.env.ADMIN_USER_PASSWORD)
    adminUser.save((err, savedUser) => {
        if (err) {
            console.log(`Error creating admin user: ${err}`)
        } else {
            console.log("Succesfully created admin user")
        }
    })
}